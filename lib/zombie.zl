;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Standard prelude for Zombie programs ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;
;; This is imported by default by the Zombie runtime, so anything that this
;; exports is available in all packages.
;;

(import zombie.internal.builtins)

;; vectors
(export vector make-vector vector? vector-length vector-ref vector-set!)

;; structs
(export make-struct-type make-struct struct-is? bind-struct)

;; boxes
(export box? box box-ref box-set!)

(define %box (make-struct-type "box" 1))
(define box? (lambda (x) (struct-is? %box x)))
(define box (lambda (x) (make-struct %box (vector x))))
(define box-ref (lambda (x) (bind-struct %box x (lambda (v) (vector-ref v 0)))))
(define box-set! (lambda (x n) (bind-struct %box x (lambda (v) (vector-set! v 0 n)))))

;; buffers and io
(export buffer? make-buffer buffer-length buffer-segment buffer-ref buffer-set!)
(export read-file write-buffer! string->buffer buffer->string)

;; misc
(export print nil eq?)

;; booleans
(export not true false boolean?)
(define not (lambda (x) (if x false true)))

;; numbers
(export + - * / mod > < = <= >= number?)
(define >= (lambda (x y) (if (= x y) true (> x y))))
(define <= (lambda (x y) (if (= x y) true (< x y))))

